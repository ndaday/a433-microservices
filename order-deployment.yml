apiVersion: v1 # Versi API yang didefinisikan
kind: Service # jenis objek kubernetes
metadata:
  name: order-service # nama service di kubernetes
  labels: # label yang digunakan pod untuk service
    app: order
    service: order
spec:
  type: NodePort # tipe Service
  ports: # port yang diakses oleh service
    - port: 3000
      name: http
  selector: # memilih pod sesuai label
    app: order
---
apiVersion: v1 # Versi API yang didefinisikan
kind: ServiceAccount # jenis objek kubernetes
metadata:
  name: order # nama service di kubernetes
  labels: # label yang digunakan untuk service
    account: order
---
apiVersion: apps/v1 # Versi API yang didefinisikan
kind: Deployment # jenis objek kubernetes
metadata:
  name: order # nama deployment di kubernetes
  labels: # label yang digunakan pod untuk deployment
    app: order
    tier: producer
spec: # spesifikasi deployment
  replicas: 1 # jumlah replika pod
  selector: # selector untuk memilih pod
    matchLabels:
      app: order
  template: # metadata untuk pod
    metadata:
      labels:
        app: order
        tier: producer
    spec: # konfigurasi container dalam pod
      serviceAccountName: order # nama serviceaccount yang digunakan untuk menjalankan pod
      containers:
        - name: order # nama container
          image: ghcr.io/ndaday/order_service:latest # nama image yang digunakan
          ports: # port yang digunakan untuk mengakses container
            - containerPort: 3000
          env: # environment untuk terhubung ke rabbitmq
            - name: PORT
              value: '3000'
            - name: AMQP_URL
              value: 'amqp://user:3DCNQ5XuqhAh9Bz6@rabbitmq:5672'
          securityContext: # mengatur user ID yang akan digunakan untuk menjalankan proses di dalam kontainer
            runAsUser: 1000
